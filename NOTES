Updating the Shotgun Library
============================

Replacing the current shotgun sources is relatively straight forward.

(1) Copy the following files from the shotgun library to the src folder:

      * cas_array.h
      * common.h
      * lasso.cpp
      * logreg.cpp
      * shared.cpp

(2) Modify the `inline bool CAS` function in cas_array.h in order to check if
    it is being compiled on x84_64 architecture. If not, return a "graceful"
    runtime error that still allows R to compile the package:

        inline bool CAS(long *ptr, long oldv, long newv) {
          unsigned char ret;
          #if __x86_64__
          /* Note that sete sets a 'byte' not the word */
          __asm__ __volatile__ (
                        "  lock\n"
                        "  cmpxchgq %2,%1\n"
                        "  sete %0\n"
                        : "=q" (ret), "=m" (*ptr)
                        : "r" (newv), "m" (*ptr), "a" (oldv)
                        : "memory");
          #else
          Rf_error("The x86_64 architecture is only supported.");
          #endif
          return ret;
        }

(3) Define an #isnan macro in common.h. Including the cmath header on darwin
    messes up isnan. I'm using a simple (but maybe not correct) isnan that was
    suggested here: http://stackoverflow.com/questions/570669
    
    Before the #include "cas_array.h" in common.h, do this:
    
        #ifdef __APPLE__
        #define isnan(_a) (_a != _a)
        #endif
    
    Perhaps we can try a more complicated version of isnan at a later point.

(4) There is no (4) for now.
